
# Example of the scene file

scene {
	name: Example Scene;			# default: New Scene
	world_color: 0x0;				# default: 0x0 (black)
}

camera {
	origin: (-2000, 0, 0);			# default: (-1000, 0, 0)
	alpha: 0;						# default: 0 (in degrees)
									# 	angle of camera rotation (near OY)
	beta: 0;						# default: 0 (in degrees)
									# 	angle of camera rotation (near OX)
	gamma: 0;						# default: 0 (in degrees)
									# 	angle of camera rotation (near OZ)
	fov: 100;						# default: 100 (in degrees) (60 - 120)
									# 	Field Of View
}

light {
    type: direct;					# default: point; (point and direct)
    color: 0xffffff;				# default: 0xffffff
	bright: 0.25;					# default: 0.15 (0.0 - 1.0, excluding 0)
	origin: (0, 10000, 0);			# default: (0, 10000, 0)
									#	valid only for point type
	direct: (0, -1, 0);				# default: (0, -1, 0)
									#	valid only for direct type
}

#
#   Line comment symbol - '#'
#

################################################################################
#																			   #
#	Next properties are valid for each object:								   #
#																			   #
#	 - color;																   #
#		values: in hex form - 0xrrggbb OR 0XRRGGBB;							   #
#		default: 0xffff00;													   #
#																			   #
#	 - ambnt (ambient);														   #
#		values: 0.0 - 1.0;													   #
#		default: 0.1;														   #
#		koef of an artificial illumination of the objects (ambient light);	   #
#																			   #
#	 - diff (diffuse);														   #
#		values: 0.0 - 1.0;													   #
#		default: 1.0;														   #
#		brightness of the object's own color;								   #
#																			   #
#	 - spclr (specularity);													   #
#		values: 0.0 - 1.0;													   #
#		default: 0.0;														   #
#		specularity koef of the object;										   #
#																			   #
#	 - s_blur (specular blur);												   #
#		values: 0.0 - 1.0;													   #
#		default: 0.0;														   #
#		koef of the blur effect of reflection;								   #
#																			   #
#	 - trans (transparency);												   #
#		values: 0.0 - 1.0;													   #
#		default: 0.0;														   #
#		transparency koef of the object;									   #
#																			   #
#	 - t_blur (transparent blur);											   #
#		values: 0.0 - 1.0;													   #
#		default: 0.0;														   #
#		koef of the blur effect of transparency;							   #
#																			   #
#	 - phong (Phong shading);												   #
#		values: 0.0 - 1.0;													   #
#		default: 0.2;														   #
#		koef of the shining effect;											   #
#                                                                              #
#	Texturing:                                                                 #
#                                                                              #
#	 - "texture": "path/to/the/texture/file                                    #
#	    Supported .png, .jp(e)g, .tga, .bmp                                    #
#                                                                              #
#	 - "procedural": {        												   #
#		 "name": "name of sample",								        	   #
#		 "ramp": "path/to/ramp/file",   									   #
#		 "seed":  19067                                                        #
#           number to initialize a pseudorandom number generator        	   #
#		 "scale": 2                                                            #
#           pattern repeatability       	                	        	   #
#		 "function": "turbulance / fractal",   								   #
#		    function to generate noise value, default: fractal_sum 	    	   #
#		 "octaves": 2,				            				        	   #
#		    value to control the amount of detail of Perlin noise			   #
#		    range: 1 - 7                                            		   #
#		 "gain": 0.5,			              					        	   #
#		    aka "frequency"                                           		   #
#		 "lacunarity": 2,   				            					   #
#		    aka "amplitude"                                           		   #
#		 "perturbation": 1   				            					   #
#		}                       											   #
#                                                                              #
#	 - "checker": {        			    									   #
#		 "color1": "0xABABAB",      							        	   #
#		 "color2": "blue_marble",      							        	   #
#		    color or noise sample value to fill a cell                         #
#		 "size": 2                                                             #
#           size of pattern                	                	        	   #
#		}                       											   #
#		Any of fields could be skipped 										   #
#		General checker could be set by typing "checker": {}				   #
#                                                                              #
#	Also, there are 2 functions:                                               #
#                                                                              #
#	 - translate;                                                              #
#	    values: point, as a move vector;                                       #
#	    default: (0.0, 0.0, 0.0);                                              #
#                                                                              #
#	 - rotate;                                                                 #
#	    values: point with alpha, beta and gamma angles as                     #
#	        x, y and z respectively;                                           #
#	    default: (0.0, 0.0, 0.0);                                              #
#                                                                              #
################################################################################

plane {
	translate: (0, -500, 0)			# default: (0, -1000, 0)
	rotate: (0, 0, 90)				# default: (0, 90, 0)
	width: 150                      # default: infinite
	height: 100						# default: infinite
	color: 0x0000ff;
	phong: 0;
}

sphere {
	translate: (0, 0, 0);			# default: (0, 0, 0)
	radius: 300;					# default: 100
	color: 0xff0000;
}

cone {
	translate: (0, -500, 0);		# default: (0, 0, -200)
	angle: 30;					    # default: 45
	rotate: (30, -15, 45);			# default: (0, 90, 0)
	maxh: 150;					    # default: infinite
	minh: 150;					    # default: infinite
	color: 0x00ff00;
}

cylinder {

}

disk {

}

cube {

}

paraboloid {

}

torus {

}
